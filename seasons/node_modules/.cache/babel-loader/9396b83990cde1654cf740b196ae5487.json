{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\aa64645\\\\VSCode\\\\reactTraining\\\\seasons\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\aa64645\\\\VSCode\\\\reactTraining\\\\seasons\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\aa64645\\\\VSCode\\\\reactTraining\\\\seasons\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\aa64645\\\\VSCode\\\\reactTraining\\\\seasons\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\aa64645\\\\VSCode\\\\reactTraining\\\\seasons\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\aa64645\\\\VSCode\\\\reactTraining\\\\seasons\\\\src\\\\index.js\";\nimport React from 'react';\nimport SeasonDisplay from './SeasonDisplay';\nimport Spinner from './Spinner';\nimport ReactDOM from 'react-dom';\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      lat: null,\n      errorMessage: ''\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      window.navigator.geolocation.getCurrentPosition(function (position) {\n        return _this2.setState({\n          lat: position.coords.latitude\n        });\n      }, function (error) {\n        return _this2.setState({\n          errorMessage: error.message\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.errorMessage && !this.state.lat) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19\n          },\n          __self: this\n        }, \"Error: \", this.state.errorMessage);\n      }\n\n      if (!this.state.errorMessage && this.state.lat) {\n        return React.createElement(SeasonDisplay, {\n          lat: this.state.lat,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(Spinner, {\n        inputText: \"Waiting choice to Allow or Deny Location\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\n;\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["C:\\Users\\aa64645\\VSCode\\reactTraining\\seasons\\src\\index.js"],"names":["React","SeasonDisplay","Spinner","ReactDOM","App","state","lat","errorMessage","window","navigator","geolocation","getCurrentPosition","position","setState","coords","latitude","error","message","Component","render","document","getElementById"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,QAAP,MAAqB,WAArB;;IAEMC,G;;;;;;;;;;;;;;;;;UAEFC,K,GAAQ;AAAEC,MAAAA,GAAG,EAAE,IAAP;AAAaC,MAAAA,YAAY,EAAE;AAA3B,K;;;;;;wCAEY;AAAA;;AAChBC,MAAAA,MAAM,CAACC,SAAP,CAAiBC,WAAjB,CAA6BC,kBAA7B,CACI,UAAAC,QAAQ;AAAA,eAAI,MAAI,CAACC,QAAL,CAAc;AAAEP,UAAAA,GAAG,EAAEM,QAAQ,CAACE,MAAT,CAAgBC;AAAvB,SAAd,CAAJ;AAAA,OADZ,EAEI,UAAAC,KAAK;AAAA,eAAI,MAAI,CAACH,QAAL,CAAc;AAAEN,UAAAA,YAAY,EAAES,KAAK,CAACC;AAAtB,SAAd,CAAJ;AAAA,OAFT;AAIH;;;6BAEQ;AACL,UAAG,KAAKZ,KAAL,CAAWE,YAAX,IAA2B,CAAC,KAAKF,KAAL,CAAWC,GAA1C,EAA8C;AAC1C,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAa,KAAKD,KAAL,CAAWE,YAAxB,CAAP;AACH;;AACD,UAAG,CAAC,KAAKF,KAAL,CAAWE,YAAZ,IAA4B,KAAKF,KAAL,CAAWC,GAA1C,EAA8C;AAC1C,eAAO,oBAAC,aAAD;AAAe,UAAA,GAAG,EAAE,KAAKD,KAAL,CAAWC,GAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH;;AAED,aACI,oBAAC,OAAD;AAAS,QAAA,SAAS,EAAC,0CAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAGH;;;;EAtBaN,KAAK,CAACkB,S;;AAwBvB;AAEDf,QAAQ,CAACgB,MAAT,CAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAyBC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAzB","sourcesContent":["import React from 'react';\r\nimport SeasonDisplay from './SeasonDisplay';\r\nimport Spinner from './Spinner';\r\nimport ReactDOM from 'react-dom';\r\n\r\nclass App extends React.Component {\r\n\r\n    state = { lat: null, errorMessage: ''}\r\n\r\n    componentDidMount() {\r\n        window.navigator.geolocation.getCurrentPosition(\r\n            position => this.setState({ lat: position.coords.latitude}),\r\n            error => this.setState({ errorMessage: error.message})\r\n        )\r\n    };\r\n    \r\n    render() {\r\n        if(this.state.errorMessage && !this.state.lat){\r\n            return <div>Error: {this.state.errorMessage}</div>\r\n        }\r\n        if(!this.state.errorMessage && this.state.lat){\r\n            return <SeasonDisplay lat={this.state.lat}/>\r\n        }\r\n\r\n        return (\r\n            <Spinner inputText=\"Waiting choice to Allow or Deny Location\"/>\r\n        );\r\n    }\r\n\r\n};\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"]},"metadata":{},"sourceType":"module"}