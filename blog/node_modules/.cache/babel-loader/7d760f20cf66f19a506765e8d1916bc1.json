{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Josh-VR\\\\PycharmProjects\\\\ReactTraining\\\\blog\\\\src\\\\components\\\\UserHeader.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchUser } from \"../actions\";\n\nclass UserHeader extends React.Component {\n  componentDidMount() {\n    this.props.fetchUser(this.props.userId);\n  }\n\n  render() {\n    const user = this.props.users.find(user => user.id === this.props.userId);\n\n    if (!user) {\n      return null;\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, user.name);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    users: state.users\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchUser\n})(UserHeader);","map":{"version":3,"sources":["C:\\Users\\Josh-VR\\PycharmProjects\\ReactTraining\\blog\\src\\components\\UserHeader.js"],"names":["React","connect","fetchUser","UserHeader","Component","componentDidMount","props","userId","render","user","users","find","id","name","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,QAA0B,YAA1B;;AAEA,MAAMC,UAAN,SAAyBH,KAAK,CAACI,SAA/B,CAAyC;AACvCC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWJ,SAAX,CAAqB,KAAKI,KAAL,CAAWC,MAAhC;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAMC,IAAI,GAAG,KAAKH,KAAL,CAAWI,KAAX,CAAiBC,IAAjB,CAAsBF,IAAI,IAAIA,IAAI,CAACG,EAAL,KAAY,KAAKN,KAAL,CAAWC,MAArD,CAAb;;AAEA,QAAI,CAACE,IAAL,EAAW;AACT,aAAO,IAAP;AACD;;AAED,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMA,IAAI,CAACI,IAAX,CAAP;AACD;;AAbsC;;AAgBzC,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AAAEL,IAAAA,KAAK,EAAEK,KAAK,CAACL;AAAf,GAAP;AACD,CAFD;;AAIA,eAAeT,OAAO,CACpBa,eADoB,EAEpB;AAAEZ,EAAAA;AAAF,CAFoB,CAAP,CAGbC,UAHa,CAAf","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchUser } from \"../actions\";\r\n\r\nclass UserHeader extends React.Component {\r\n  componentDidMount() {\r\n    this.props.fetchUser(this.props.userId);\r\n  }\r\n\r\n  render() {\r\n    const user = this.props.users.find(user => user.id === this.props.userId);\r\n\r\n    if (!user) {\r\n      return null;\r\n    }\r\n\r\n    return <div>{user.name}</div>;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return { users: state.users };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { fetchUser }\r\n)(UserHeader);\r\n"]},"metadata":{},"sourceType":"module"}