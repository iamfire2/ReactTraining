{"ast":null,"code":"import jsonPlaceHolder from \"../api/jsonPlaceHolder\";\nimport _ from \"lodash\";\nexport const fetchPost = () => {\n  return async dispatch => {\n    const response = await jsonPlaceHolder.get(\"/posts\");\n    dispatch({\n      type: \"FETCH_POSTS\",\n      payload: response.data\n    });\n  };\n};\nexport const fetchUser = id => dispatch => {\n  _fetchUserId(id, dispatch);\n};\n\nconst _fetchUserId = _.memoize(async (id, dispatch) => {\n  const response = await jsonPlaceHolder.get(\"/users/\".concat(id));\n  dispatch({\n    type: \"FETCH_USER\",\n    payload: response.data\n  });\n});","map":{"version":3,"sources":["C:\\Users\\Josh-VR\\PycharmProjects\\ReactTraining\\blog\\src\\actions\\index.js"],"names":["jsonPlaceHolder","_","fetchPost","dispatch","response","get","type","payload","data","fetchUser","id","_fetchUserId","memoize"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,wBAA5B;AACA,OAAOC,CAAP,MAAc,QAAd;AAEA,OAAO,MAAMC,SAAS,GAAG,MAAM;AAC7B,SAAO,MAAMC,QAAN,IAAkB;AACvB,UAAMC,QAAQ,GAAG,MAAMJ,eAAe,CAACK,GAAhB,CAAoB,QAApB,CAAvB;AAEAF,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAE,aAAR;AAAuBC,MAAAA,OAAO,EAAEH,QAAQ,CAACI;AAAzC,KAAD,CAAR;AACD,GAJD;AAKD,CANM;AAQP,OAAO,MAAMC,SAAS,GAAGC,EAAE,IAAIP,QAAQ,IAAI;AACzCQ,EAAAA,YAAY,CAACD,EAAD,EAAKP,QAAL,CAAZ;AACD,CAFM;;AAGP,MAAMQ,YAAY,GAAGV,CAAC,CAACW,OAAF,CAAU,OAAOF,EAAP,EAAWP,QAAX,KAAwB;AACrD,QAAMC,QAAQ,GAAG,MAAMJ,eAAe,CAACK,GAAhB,kBAA8BK,EAA9B,EAAvB;AAEAP,EAAAA,QAAQ,CAAC;AAAEG,IAAAA,IAAI,EAAE,YAAR;AAAsBC,IAAAA,OAAO,EAAEH,QAAQ,CAACI;AAAxC,GAAD,CAAR;AACD,CAJoB,CAArB","sourcesContent":["import jsonPlaceHolder from \"../api/jsonPlaceHolder\";\r\nimport _ from \"lodash\";\r\n\r\nexport const fetchPost = () => {\r\n  return async dispatch => {\r\n    const response = await jsonPlaceHolder.get(\"/posts\");\r\n\r\n    dispatch({ type: \"FETCH_POSTS\", payload: response.data });\r\n  };\r\n};\r\n\r\nexport const fetchUser = id => dispatch => {\r\n  _fetchUserId(id, dispatch);\r\n};\r\nconst _fetchUserId = _.memoize(async (id, dispatch) => {\r\n  const response = await jsonPlaceHolder.get(`/users/${id}`);\r\n\r\n  dispatch({ type: \"FETCH_USER\", payload: response.data });\r\n});\r\n"]},"metadata":{},"sourceType":"module"}