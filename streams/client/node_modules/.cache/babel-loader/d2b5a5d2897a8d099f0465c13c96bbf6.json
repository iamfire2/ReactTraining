{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\aa64645\\\\VSCode\\\\reactTraining\\\\streams\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport streams from \"../api/streams\";\nimport history from \"../history\";\nimport { SIGN_IN, SIGN_OUT, CREATE_STREAM, FETCH_STREAM, FETCH_STREAMS, DELETE_STREAM, EDIT_STREAM } from \"./types\";\nexport const signIn = userId => {\n  return {\n    type: SIGN_IN,\n    payload: userId\n  };\n};\nexport const signOut = () => {\n  return {\n    type: SIGN_OUT\n  };\n};\nexport const fetchStreams = () => async dispatch => {\n  const response = await streams.get(\"/streams\");\n  dispatch({\n    type: FETCH_STREAMS,\n    payload: response.data\n  });\n};\nexport const fetchStream = id => async dispatch => {\n  const response = await streams.get(\"/streams/\".concat(id));\n  dispatch({\n    type: FETCH_STREAM,\n    payload: response.data\n  });\n};\nexport const createStream = formValues => {\n  return async (dispatch, getState) => {\n    const userId = getState().auth.userId;\n    const response = await streams.post(\"/streams\", _objectSpread({}, formValues, {\n      userId\n    }));\n    dispatch({\n      type: CREATE_STREAM,\n      payload: response.data\n    });\n  };\n};\nexport const editStream = (id, formValues) => async dispatch => {\n  const response = await streams.put(\"/streams/\".concat(id), formValues);\n  dispatch({\n    type: EDIT_STREAM,\n    payload: response.data\n  });\n};\nexport const deleteStream = id => async dispatch => {\n  await streams.delete(\"/streams/\".concat(id));\n  dispatch({\n    type: DELETE_STREAM,\n    payload: id\n  });\n};","map":{"version":3,"sources":["C:\\Users\\aa64645\\VSCode\\reactTraining\\streams\\client\\src\\actions\\index.js"],"names":["streams","history","SIGN_IN","SIGN_OUT","CREATE_STREAM","FETCH_STREAM","FETCH_STREAMS","DELETE_STREAM","EDIT_STREAM","signIn","userId","type","payload","signOut","fetchStreams","dispatch","response","get","data","fetchStream","id","createStream","formValues","getState","auth","post","editStream","put","deleteStream","delete"],"mappings":";AAAA,OAAOA,OAAP,MAAoB,gBAApB;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,SACEC,OADF,EAEEC,QAFF,EAGEC,aAHF,EAIEC,YAJF,EAKEC,aALF,EAMEC,aANF,EAOEC,WAPF,QAQO,SARP;AAUA,OAAO,MAAMC,MAAM,GAAGC,MAAM,IAAI;AAC9B,SAAO;AACLC,IAAAA,IAAI,EAAET,OADD;AAELU,IAAAA,OAAO,EAAEF;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,MAAMG,OAAO,GAAG,MAAM;AAC3B,SAAO;AACLF,IAAAA,IAAI,EAAER;AADD,GAAP;AAGD,CAJM;AAMP,OAAO,MAAMW,YAAY,GAAG,MAAM,MAAMC,QAAN,IAAkB;AAClD,QAAMC,QAAQ,GAAG,MAAMhB,OAAO,CAACiB,GAAR,CAAY,UAAZ,CAAvB;AAEAF,EAAAA,QAAQ,CAAC;AAAEJ,IAAAA,IAAI,EAAEL,aAAR;AAAuBM,IAAAA,OAAO,EAAEI,QAAQ,CAACE;AAAzC,GAAD,CAAR;AACD,CAJM;AAMP,OAAO,MAAMC,WAAW,GAAGC,EAAE,IAAI,MAAML,QAAN,IAAkB;AACjD,QAAMC,QAAQ,GAAG,MAAMhB,OAAO,CAACiB,GAAR,oBAAwBG,EAAxB,EAAvB;AAEAL,EAAAA,QAAQ,CAAC;AAAEJ,IAAAA,IAAI,EAAEN,YAAR;AAAsBO,IAAAA,OAAO,EAAEI,QAAQ,CAACE;AAAxC,GAAD,CAAR;AACD,CAJM;AAMP,OAAO,MAAMG,YAAY,GAAGC,UAAU,IAAI;AACxC,SAAO,OAAOP,QAAP,EAAiBQ,QAAjB,KAA8B;AAAA,UAC3Bb,MAD2B,GAChBa,QAAQ,GAAGC,IADK,CAC3Bd,MAD2B;AAEnC,UAAMM,QAAQ,GAAG,MAAMhB,OAAO,CAACyB,IAAR,CAAa,UAAb,oBAA8BH,UAA9B;AAA0CZ,MAAAA;AAA1C,OAAvB;AAEAK,IAAAA,QAAQ,CAAC;AAAEJ,MAAAA,IAAI,EAAEP,aAAR;AAAuBQ,MAAAA,OAAO,EAAEI,QAAQ,CAACE;AAAzC,KAAD,CAAR;AACD,GALD;AAMD,CAPM;AASP,OAAO,MAAMQ,UAAU,GAAG,CAACN,EAAD,EAAKE,UAAL,KAAoB,MAAMP,QAAN,IAAkB;AAC9D,QAAMC,QAAQ,GAAG,MAAMhB,OAAO,CAAC2B,GAAR,oBAAwBP,EAAxB,GAA8BE,UAA9B,CAAvB;AAEAP,EAAAA,QAAQ,CAAC;AAAEJ,IAAAA,IAAI,EAAEH,WAAR;AAAqBI,IAAAA,OAAO,EAAEI,QAAQ,CAACE;AAAvC,GAAD,CAAR;AACD,CAJM;AAMP,OAAO,MAAMU,YAAY,GAAGR,EAAE,IAAI,MAAML,QAAN,IAAkB;AAClD,QAAMf,OAAO,CAAC6B,MAAR,oBAA2BT,EAA3B,EAAN;AAEAL,EAAAA,QAAQ,CAAC;AAAEJ,IAAAA,IAAI,EAAEJ,aAAR;AAAuBK,IAAAA,OAAO,EAAEQ;AAAhC,GAAD,CAAR;AACD,CAJM","sourcesContent":["import streams from \"../api/streams\";\r\nimport history from \"../history\";\r\nimport {\r\n  SIGN_IN,\r\n  SIGN_OUT,\r\n  CREATE_STREAM,\r\n  FETCH_STREAM,\r\n  FETCH_STREAMS,\r\n  DELETE_STREAM,\r\n  EDIT_STREAM\r\n} from \"./types\";\r\n\r\nexport const signIn = userId => {\r\n  return {\r\n    type: SIGN_IN,\r\n    payload: userId\r\n  };\r\n};\r\n\r\nexport const signOut = () => {\r\n  return {\r\n    type: SIGN_OUT\r\n  };\r\n};\r\n\r\nexport const fetchStreams = () => async dispatch => {\r\n  const response = await streams.get(\"/streams\");\r\n\r\n  dispatch({ type: FETCH_STREAMS, payload: response.data });\r\n};\r\n\r\nexport const fetchStream = id => async dispatch => {\r\n  const response = await streams.get(`/streams/${id}`);\r\n\r\n  dispatch({ type: FETCH_STREAM, payload: response.data });\r\n};\r\n\r\nexport const createStream = formValues => {\r\n  return async (dispatch, getState) => {\r\n    const { userId } = getState().auth;\r\n    const response = await streams.post(\"/streams\", { ...formValues, userId });\r\n\r\n    dispatch({ type: CREATE_STREAM, payload: response.data });\r\n  };\r\n};\r\n\r\nexport const editStream = (id, formValues) => async dispatch => {\r\n  const response = await streams.put(`/streams/${id}`, formValues);\r\n\r\n  dispatch({ type: EDIT_STREAM, payload: response.data });\r\n};\r\n\r\nexport const deleteStream = id => async dispatch => {\r\n  await streams.delete(`/streams/${id}`);\r\n\r\n  dispatch({ type: DELETE_STREAM, payload: id });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}