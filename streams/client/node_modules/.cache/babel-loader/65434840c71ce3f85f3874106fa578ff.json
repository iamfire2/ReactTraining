{"ast":null,"code":"import streams from \"../api/streams\";\nimport { SIGN_IN, SIGN_OUT, CREATE_STREAM, FETCH_STREAM, FETCH_STREAMS, DELETE_STREAM, EDIT_STREAM } from \"./types\";\nimport { bindActionCreators } from \"redux\";\nexport const signIn = userId => {\n  return {\n    type: SIGN_IN,\n    payload: userId\n  };\n};\nexport const signOut = () => {\n  return {\n    type: SIGN_OUT\n  };\n};\nexport const fecthStreams = () => async dispatch => {\n  const response = await streams.get(\"/streams\");\n  dispatch({\n    type: FETCH_STREAMS,\n    payload: response.payload\n  });\n};\nexport const fetchStream = id => async dispatch => {\n  const response = await streams.get(\"streams/\".concat(id));\n  dispatch({\n    type: FETCH_STREAM,\n    payload: response.payload\n  });\n};\nexport const createStream = formValues => {\n  return async dispatch => {\n    const response = await streams.post(\"/streams\", formValues);\n    dispatch({\n      type: CREATE_STREAM,\n      payload: response.data\n    });\n  };\n};\nexport const editStream = (id, formValues) => async dispatch => {\n  const response = await streams.put(\"streams/\".concat(id), formValues);\n  dispatch({\n    type: EDIT_STREAM,\n    payload: response.data\n  });\n};\nexport const deleteStream = id => async dispatch => {\n  await streams.delete(\"streams/\".concat(id));\n  dispatch({\n    type: DELETE_STREAM\n  });\n};","map":{"version":3,"sources":["C:\\Users\\aa64645\\VSCode\\reactTraining\\streams\\client\\src\\actions\\index.js"],"names":["streams","SIGN_IN","SIGN_OUT","CREATE_STREAM","FETCH_STREAM","FETCH_STREAMS","DELETE_STREAM","EDIT_STREAM","bindActionCreators","signIn","userId","type","payload","signOut","fecthStreams","dispatch","response","get","fetchStream","id","createStream","formValues","post","data","editStream","put","deleteStream","delete"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,gBAApB;AACA,SACEC,OADF,EAEEC,QAFF,EAGEC,aAHF,EAIEC,YAJF,EAKEC,aALF,EAMEC,aANF,EAOEC,WAPF,QAQO,SARP;AASA,SAASC,kBAAT,QAAmC,OAAnC;AAEA,OAAO,MAAMC,MAAM,GAAGC,MAAM,IAAI;AAC9B,SAAO;AACLC,IAAAA,IAAI,EAAEV,OADD;AAELW,IAAAA,OAAO,EAAEF;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,MAAMG,OAAO,GAAG,MAAM;AAC3B,SAAO;AACLF,IAAAA,IAAI,EAAET;AADD,GAAP;AAGD,CAJM;AAMP,OAAO,MAAMY,YAAY,GAAG,MAAM,MAAMC,QAAN,IAAkB;AAClD,QAAMC,QAAQ,GAAG,MAAMhB,OAAO,CAACiB,GAAR,CAAY,UAAZ,CAAvB;AAEAF,EAAAA,QAAQ,CAAC;AAAEJ,IAAAA,IAAI,EAAEN,aAAR;AAAuBO,IAAAA,OAAO,EAAEI,QAAQ,CAACJ;AAAzC,GAAD,CAAR;AACD,CAJM;AAMP,OAAO,MAAMM,WAAW,GAAGC,EAAE,IAAI,MAAMJ,QAAN,IAAkB;AACjD,QAAMC,QAAQ,GAAG,MAAMhB,OAAO,CAACiB,GAAR,mBAAuBE,EAAvB,EAAvB;AAEAJ,EAAAA,QAAQ,CAAC;AAAEJ,IAAAA,IAAI,EAAEP,YAAR;AAAsBQ,IAAAA,OAAO,EAAEI,QAAQ,CAACJ;AAAxC,GAAD,CAAR;AACD,CAJM;AAMP,OAAO,MAAMQ,YAAY,GAAGC,UAAU,IAAI;AACxC,SAAO,MAAMN,QAAN,IAAkB;AACvB,UAAMC,QAAQ,GAAG,MAAMhB,OAAO,CAACsB,IAAR,CAAa,UAAb,EAAyBD,UAAzB,CAAvB;AAEAN,IAAAA,QAAQ,CAAC;AAAEJ,MAAAA,IAAI,EAAER,aAAR;AAAuBS,MAAAA,OAAO,EAAEI,QAAQ,CAACO;AAAzC,KAAD,CAAR;AACD,GAJD;AAKD,CANM;AAQP,OAAO,MAAMC,UAAU,GAAG,CAACL,EAAD,EAAKE,UAAL,KAAoB,MAAMN,QAAN,IAAkB;AAC9D,QAAMC,QAAQ,GAAG,MAAMhB,OAAO,CAACyB,GAAR,mBAAuBN,EAAvB,GAA6BE,UAA7B,CAAvB;AAEAN,EAAAA,QAAQ,CAAC;AAAEJ,IAAAA,IAAI,EAAEJ,WAAR;AAAqBK,IAAAA,OAAO,EAAEI,QAAQ,CAACO;AAAvC,GAAD,CAAR;AACD,CAJM;AAMP,OAAO,MAAMG,YAAY,GAAGP,EAAE,IAAI,MAAMJ,QAAN,IAAkB;AAClD,QAAMf,OAAO,CAAC2B,MAAR,mBAA0BR,EAA1B,EAAN;AAEAJ,EAAAA,QAAQ,CAAC;AAAEJ,IAAAA,IAAI,EAAEL;AAAR,GAAD,CAAR;AACD,CAJM","sourcesContent":["import streams from \"../api/streams\";\r\nimport {\r\n  SIGN_IN,\r\n  SIGN_OUT,\r\n  CREATE_STREAM,\r\n  FETCH_STREAM,\r\n  FETCH_STREAMS,\r\n  DELETE_STREAM,\r\n  EDIT_STREAM\r\n} from \"./types\";\r\nimport { bindActionCreators } from \"redux\";\r\n\r\nexport const signIn = userId => {\r\n  return {\r\n    type: SIGN_IN,\r\n    payload: userId\r\n  };\r\n};\r\n\r\nexport const signOut = () => {\r\n  return {\r\n    type: SIGN_OUT\r\n  };\r\n};\r\n\r\nexport const fecthStreams = () => async dispatch => {\r\n  const response = await streams.get(\"/streams\");\r\n\r\n  dispatch({ type: FETCH_STREAMS, payload: response.payload });\r\n};\r\n\r\nexport const fetchStream = id => async dispatch => {\r\n  const response = await streams.get(`streams/${id}`);\r\n\r\n  dispatch({ type: FETCH_STREAM, payload: response.payload });\r\n};\r\n\r\nexport const createStream = formValues => {\r\n  return async dispatch => {\r\n    const response = await streams.post(\"/streams\", formValues);\r\n\r\n    dispatch({ type: CREATE_STREAM, payload: response.data });\r\n  };\r\n};\r\n\r\nexport const editStream = (id, formValues) => async dispatch => {\r\n  const response = await streams.put(`streams/${id}`, formValues);\r\n\r\n  dispatch({ type: EDIT_STREAM, payload: response.data });\r\n};\r\n\r\nexport const deleteStream = id => async dispatch => {\r\n  await streams.delete(`streams/${id}`);\r\n\r\n  dispatch({ type: DELETE_STREAM });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}